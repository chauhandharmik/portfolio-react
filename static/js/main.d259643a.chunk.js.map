{"version":3,"sources":["images/f1.jpg","components/Navigation.js","components/Header.js","components/Services.js","components/RecentProjects.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","navLinks","map","section","href","className","React","Component","myStyle","back","Header","style","Services","RecentProjects","About","classname","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,gC,qRC2B5BC,G,6KArBP,IACMC,EADW,CAAC,OAAO,QAAQ,WACPC,KAAK,SAAAC,GAC3B,OACI,4BAAI,uBAAGC,KAAO,IAAMD,GAAhB,IAA4BA,EAA5B,SAGhB,OACI,6BACI,wBAAIE,UAAU,QAAd,gBAGA,4BACIJ,Q,GAfSK,IAAMC,Y,gBCCzBC,G,MAAU,CACZ,+BAA4BC,IAA5B,MACA,OAAW,OACX,eAAmB,UAuBRC,E,uKAhBP,OACI,4BAAQC,MAAOH,GACX,wBAAIH,UAAU,SAAd,mBAGA,8DAGA,uBAAGD,KAAK,cAAR,sB,GAbKE,IAAMC,WCsCZK,G,6KAxCP,OACI,yBAAKP,UAAU,YACX,wCACA,wBAAIA,UAAU,SAAd,mBACA,yBAAKA,UAAU,OACf,6BACI,8BACI,uBAAGA,UAAU,sBACb,0CACA,0DAGR,6BACI,8BACA,uBAAGA,UAAU,sBACb,yCACI,8DAGR,6BACI,8BACI,uBAAGA,UAAU,qBACb,yCACA,uDAGR,6BACI,8BACI,uBAAGA,UAAU,oBACb,wCACA,0E,GAlCDC,IAAMC,YCCRM,G,6KAEb,OACI,yBAAKR,UAAU,aACX,uBAAGA,UAAU,SAAb,mBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,QAAb,kCAEJ,yBAAKA,UAAU,YACX,uBAAGA,UAAU,QAAb,wCAIR,yBAAKA,UAAU,QACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,QAAb,8BAGJ,yBAAKA,UAAU,YACf,uBAAGA,UAAU,QAAb,oC,GApBwBE,cCgB7BO,G,6KAfP,OACI,6BACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,QAAf,QAGA,yBAAKA,UAAU,QAAf,c,GARAR,cCmBLS,MAff,WACE,OACE,6BAEW,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d259643a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/f1.eb2ed28a.jpg\";","import React from \"react\";\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends React.Component\r\n{\r\n    render(){\r\n        const sections = ['Home','About','Contact'];\r\n        const navLinks = sections.map( section => {\r\n            return(\r\n                <li><a href= {'#' + section} > {section} </a></li>\r\n            )\r\n        });\r\n    return (\r\n        <nav>\r\n            <h2 className=\"logo\">\r\n                My portfolio\r\n            </h2>\r\n            <ul>\r\n               {navLinks}\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n    }\r\n    \r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport back from '../images/f1.jpg'\r\nimport './header.css'\r\n\r\nconst myStyle = {\r\n    'backgroundImage' : `url( ${back} )`,\r\n    'height' : '75vh',\r\n    'backgroundSize' : 'cover'\r\n}\r\nclass Header extends React.Component\r\n{\r\n   \r\n    render()\r\n    {\r\n        return(\r\n            <header style={myStyle}>\r\n                <h1 className=\"title\">\r\n                    Dharmik chauhan\r\n                </h1>\r\n                <p>\r\n                    hello this is my portfolio site\r\n                </p>\r\n                <a href=\"findout.js\">Find out More</a>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n    \r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './services.css'\r\n\r\nclass Services extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"services\">\r\n                <h3>Services</h3>\r\n                <h2 className=\"title\">what we provide</h2>\r\n                <div className=\"row\">\r\n                <div>\r\n                    <span>\r\n                        <i className=\"fas fa-mobile-alt\" ></i>\r\n                        <h2>Responsive</h2>\r\n                        <p>Looks great on any screen</p>\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                    <i className=\"fas fa-pencil-alt\" ></i>\r\n                    <h2>Designing</h2>\r\n                        <p>fresly redesign for bootstrap</p>\r\n                </span>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        <i className=\"fas fa-thumbs-up\" ></i>\r\n                        <h2>Favourite</h2>\r\n                        <p>all user likes my work</p>\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        <i className=\"fas fa-question\" ></i>\r\n                        <h2>Question</h2>\r\n                        <p>i must give answer of your question</p>\r\n                    </span>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Services;","import React, { Component } from 'react'\r\nimport './recentprojects.css'\r\n\r\n\r\nexport default class RecentProjects extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <p className=\"title\" >Recent Projects</p>\r\n                <div className=\"row1\" >\r\n                    <div className=\"project1\">\r\n                        <p className=\"desc\">this project is first project</p>\r\n                    </div>\r\n                    <div className=\"project2\" >\r\n                        <p className=\"desc\">this is second project of hte year</p>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row2\">\r\n                    <div className=\"project3\">\r\n                        <p className=\"desc\">description for project 3</p>\r\n\r\n                    </div>\r\n                    <div className=\"project4\">\r\n                    <p className=\"desc\">description for project 4</p>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './about.css'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div classname=\"container\">\r\n                    <div classname=\"col1\">\r\n                        col1\r\n                    </div>\r\n                    <div classname=\"col2\">\r\n                        col2\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Header from './components/Header.js'\nimport Services from \"./components/Services.js\";\nimport RecentProjects from './components/RecentProjects.js';\nimport About from './components/About.js'\nfunction App() {\n  return (\n    <div>\n      \n               <Navigation/>\n               <Header/>\n               <About/>\n               <Services/>\n               <RecentProjects/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}